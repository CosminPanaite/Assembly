     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 110402FEFF                  s db 17,4,2,-2,-1
    15                                      lens equ $-s
    16 00000005 <res 00000005>              b resb lens
    17                                      
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22                                         
    23 00000000 BE00000000                     mov esi,0
    24 00000005 BF00000000                     mov edi,0
    25 0000000A B905000000                     mov ecx , lens
    26                                         myLoop:
    27 0000000F 8A9E[00000000]                    mov bl,[s+esi]
    28                                            
    29 00000015 80FB00                            cmp bl,0
    30 00000018 7D0E                                JGE nrPozitiv
    31 0000001A 7C00                                JL nrNegativ 
    32                                              
    33                                              nrNegativ:
    34 0000001C 88D8                                   mov al,bl
    35                                                  
    36 0000001E 8887[05000000]                         mov [b+edi],al
    37 00000024 46                                     inc esi
    38 00000025 47                                     inc edi
    39 00000026 EB02                                   jmp endLoop
    40                                                 
    41                                             nrPozitiv:
    42 00000028 46                                    inc esi
    43 00000029 47                                    inc edi
    44                                                endLoop:
    45 0000002A E2E3                              loop myLoop
    46                                            
    47                                              
    48                                                 ; exit(0)
    49 0000002C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    50 0000002E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
