     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                  
    15 00000000 0A                          a db 10
    16 00000001 02                          b db 2
    17 00000002 0900                        c dw 9
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 668B1D[02000000]            mov bx,word[c]
    23 00000007 66B90300                    mov cx , 3
    24 0000000B 6629CB                      sub bx, cx ; c-3
    25 0000000E A0[00000000]                mov al , byte[a]
    26 00000013 6698                        cbw ; extend to a word
    27 00000015 F63D[01000000]              idiv byte[b] ; al=quotient of a/b ah = remainder
    28 0000001B 6698                        cbw; ax=word of quotient
    29 0000001D 6601D8                      add ax,bx ; final result in ax =11
    30                                      ; exit(0)
    31 00000020 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    32 00000022 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
