     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                  
    15 00000000 070678562009                a dw 0607h,5678h,0920h
    16                                      lena equ ($-a)/2
    17 00000006 <res 00000003>              d resb lena
    18 00000009 03                          trei db 3
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23                                      
    24 00000000 BE01000000                  mov esi,1
    25 00000005 BF00000000                  mov edi,0
    26 0000000A B903000000                  mov ecx,lena
    27                                      myLoop:
    28                                          
    29 0000000F 8A86[00000000]                  mov al,[a+esi]
    30 00000015 88C3                            mov bl,al
    31 00000017 6698                            cbw
    32 00000019 F63D[09000000]                  idiv byte[trei]
    33 0000001F 80FC00                          cmp ah,0
    34 00000022 7402                                JE multiplu
    35 00000024 750C                                JNE nonmultiplu
    36                                              multiplu:
    37 00000026 889F[06000000]                        mov [d+edi],bl
    38 0000002C 83C602                                add esi,2
    39 0000002F 47                                    inc edi
    40 00000030 EB03                                  jmp endLoop
    41                                                nonmultiplu:
    42 00000032 83C602                                add esi,2
    43                                                
    44                                                endLoop:
    45 00000035 E2D8                                  loop myLoop
    46                                          ; exit(0)
    47 00000037 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    48 00000039 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
